@inherits InputBase<bool>

<label class="custom-checkbox">
    <input type="checkbox"
           id="@Id"
           checked="@CurrentValue"
           @onchange="OnValueChanged" />
    
    <svg viewBox="0 0 64 64">
        <path d="M 0 16 V 56 A 8 8 90 0 0 8 64 H 56 A 8 8 90 0 0 64 56 V 8 A 8 8 90 0 0 56 0 H 8 A 8 8 90 0 0 0 8 V 16 L 32 48 L 64 16 V 8 A 8 8 90 0 0 56 0 H 8 A 8 8 90 0 0 0 8 V 56 A 8 8 90 0 0 8 64 H 56 A 8 8 90 0 0 64 56 V 16" pathLength="575.0541381835938" class="path"></path>
    </svg>

    <span class="label-text">@Label</span>
</label>


@code {
    [Parameter]
    public required string Id { get; set; }

    [Parameter]
    public required string Label { get; set; }

    protected override bool TryParseValueFromString(string? value, out bool result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        validationErrorMessage = null;

        if (bool.TryParse(value, out result)) 
            return true;
        
        validationErrorMessage = "Invalid string value provided.";
        return false;
    }
    
    private void OnValueChanged(ChangeEventArgs e)
    {
        if (bool.TryParse(e.Value?.ToString(), out var value))
        {
            CurrentValue = value;
        }
    }
}