@inject IConfigService Configuration;
@inject IMarkdownService Markdown;

<div class="content-preview">
    <section class="post">
        <div class="post-titlebar">
            <h1 class="post-title">
                @if (string.IsNullOrWhiteSpace(EditorContext.Title))
                {
                    @("Untitled")
                }
                else
                {
                    @EditorContext.Title
                }
            </h1>
        </div>

        @if (!string.IsNullOrWhiteSpace(EditorContext.Description))
        {
            <h2 class="post-subtitle">
                @((MarkupString)Markdown.Render(EditorContext.Description))
            </h2>
        }

        <div class="post-content">
            @((MarkupString)EditorContext.PreviewMarkup)
        </div>

        @if (EditorContext.PostType == PostType.Normal)
        {
            <div class="post-meta">
                <div class="post-meta-items">
                    <span class="post-meta-item post-meta-author">
                        @(UserContext.User?.DisplayName ?? "unknown user")
                    </span>

                    <span class="post-meta-item post-meta-date">
                        @DateTime.Now.ToString(Configuration.Root!.General.DateFormat)
                    </span>

                    <span class="post-meta-item post-meta-category">
                        @if (!string.IsNullOrWhiteSpace(EditorContext.Category))
                        {
                            @(EditorContext.Category)
                        }
                        else
                        {
                            @("no category")
                        }
                    </span>

                    @if (!string.IsNullOrWhiteSpace(EditorContext.TagList))
                    {
                        <div class="post-meta-item post-meta-tags">
                            <ul>
                                @foreach (var tag in EditorContext.TagList.Split(',', StringSplitOptions.TrimEntries))
                                {
                                    <li>@tag</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            </div>
        }
    </section>
</div>

@code {
    [CascadingParameter]
    public UserContext UserContext { get; set; } = null!;

    [Parameter]
    public required EditorContext EditorContext { get; set; }
}
