@page "/admin/content/new"
@using Xaelith.Micro.Infrastructure.DataModel.Admin
@inherits XaelithRestrictedPage

@inject IMarkdownService Markdown

<HeadContent>
    <link rel="stylesheet" href="style/admin/panel.css"/>
</HeadContent>

<main id="admin">
    <AdminNav/>

    <div class="admin-content">
        <h1 class="admin-view-title">@Title</h1>

        <div class="admin-inner-content">
            <TabView>
                <Tab Header="Edit">
                    <EditForm Model="PostEditModel">
                        <div class="input-group">
                            <label for="post-title">Title</label>
                            <InputText id="post-title"
                                       type="text"
                                       Value="@PostEditModel.Title"
                                       ValueChanged="@((string? v) => PostEditModel.Title = v ?? string.Empty)"
                                       ValueExpression="@(() => PostEditModel.Title)"/>
                        </div>

                        <div class="input-group">
                            <label for="post-content">Content</label>
                            
                            <div class="editor-window">
                                <InputTextArea id="post-content"
                                               type="text"
                                               class="editor-textarea"
                                               Value="@PostEditModel.Content"
                                               ValueChanged="@EditedPostChanged"
                                               ValueExpression="@(() => PostEditModel.Content)"/>
                            </div>
                        </div>
                    </EditForm>
                </Tab>

                <Tab Header="Preview">
                    <section class="post">
                        <div class="post-content">
                            @((MarkupString)PostPreview);
                        </div>
                    </section>
                </Tab>

                <Tab Header="Properties">
                    <div>
                        Here would be post properties. IF I HAD ANY.
                    </div>
                </Tab>
            </TabView>
        </div>
    </div>
</main>

@code {
    [CascadingParameter]
    public UserContext UserContext { get; set; } = null!;

    protected override string Title => "new entry";

    public PostEditModel PostEditModel { get; set; } = new();
    public string PostPreview { get; set; } = string.Empty;

    private void EditedPostChanged(string? value)
    {
        PostEditModel.Content = value ?? string.Empty;
        PostPreview = Markdown.Render(value ?? string.Empty);
        StateHasChanged();
    }
}