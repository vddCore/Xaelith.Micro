@layout AdminShell

@page "/admin/dashboard"
@using System.Diagnostics
@inherits XaelithRestrictedPage

<h1 class="admin-view-title">@Title</h1>

<div class="admin-inner-content">
    <div class="dashboard-header">
        <img src="img/xaelith-bw.svg"
             alt="xaelith logo"
             class="dashboard-logo @(ShowWelcomeMessage ? "visible" : "")"
             height="134" width="150"/>

        <h1 class="welcome-message @(ShowWelcomeMessage ? "visible" : "")">
            @((MarkupString)WelcomeMessage)
        </h1>
    </div>

    <div class="dashboard-stats">
        @for (var i = 0; i < Widgets.Count; i++)
        {
            var statEntry = Widgets[i];

            if (statEntry != null)
            {
                var value = statEntry.ValueExpression.Invoke()?.ToString() ?? "null";

                <div class="stat-entry @(StatShowCounter > i ? "visible" : "")">
                    <span class="stat-name">
                        @((MarkupString)statEntry.Name)
                    </span>

                    <span class="stat-value">
                        @((MarkupString)(value ?? "N/A"))
                    </span>
                </div>
            }
            else
            {
                <br/>
            }
        }
    </div>
</div>

@code {
    [CascadingParameter]
    public UserContext UserContext { get; set; } = null!;

    private List<StatisticsEntry?> Widgets { get; set; } = null!;
    
    protected override string Title => "dashboard";
    
    public bool ShowWelcomeMessage { get; set; }
    public int StatShowCounter { get; set; }

    public string WelcomeMessage
    {
        get
        {
            var time = DateTime.Now;

            return time.Hour switch
            {
                >= 0 and <= 4 => $"Still not sleeping, {UserContext.User?.DisplayName ?? "user"}?<br />" + $"Please take care of yourself. ",
                >= 5 and <= 11 => $"Good morning, {UserContext.User?.DisplayName ?? "user"}! ",
                >= 12 and <= 17 => $"Good afternoon, {UserContext.User?.DisplayName ?? "user"}! ",
                >= 18 and <= 22 => $"Good evening, {UserContext.User?.DisplayName ?? "user"}! ",
                _ => $"You should go to sleep, {UserContext.User?.DisplayName ?? "user"}.<br />" + $"Really. Like, now. "
            };
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Widgets =
        [
            new("Blog posts", () => Statistics.Data.BlogPosts),
            new("Static pages", () => Statistics.Data.StaticPages),
            new("Drafts", () => Statistics.Data.Drafts),
            null,
            new("Content disk usage", () => FileSystemUtility.FormatSize(Statistics.Data.DiskUsage)),
            new("Operating memory usage", () => FileSystemUtility.FormatSize(
                Process.GetCurrentProcess().WorkingSet64
            )),

            null,
            new("Times this page was viewed", () => Statistics.Data.DashboardViewCount),
        ];
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            Statistics.DashboardHit();
            
            ShowWelcomeMessage = true;
            await InvokeAsync(StateHasChanged);
            await Task.Delay(1200);

            foreach (var entry in Widgets)
            {
                StatShowCounter++;

                if (entry == null)
                    continue;

                await InvokeAsync(StateHasChanged);
                await Task.Delay(180);
            }
        }
    }
}